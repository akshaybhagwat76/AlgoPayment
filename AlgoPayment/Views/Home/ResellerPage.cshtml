@using AlgoPayment.VideModel;

@{
    ViewBag.Title = "ResellerPage";
    Layout = null;

    UserCredentials user = (UserCredentials)(Session["UserCredentials"]);
    if (user == null)
    {
        Response.Redirect("~/Home/Index");
        return;
    }
    var list = (List<ResellerViewModel>)ViewBag.lstClients;
    var amount1 = list.Count > 0 ? list[0].ResellerAmount : 0;
    var jss = new System.Web.Script.Serialization.JavaScriptSerializer();
    var userInfoJson = jss.Serialize(ViewBag.lstClients);
}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<!--Navbar-->
<nav class="navbar navbar-default mq-navbar">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Hi @user.Name</a>
        </div>

        <div class="navbar-header collapse navbar-collapse" id="myNavbar">
            <ul class="nav navbar-nav">
                <li class="active"><a href="#">Clients</a></li>
                <li><a id="btnLogout"><i class="icon-off"></i> Logout</a></li>

            </ul>
        </div>
    </div>
</nav>

<!-- widgets -->
<div class="container">
    <button class="btn btn-success" id="addtoCart">Payment Cart</button>
    <a class="btn btn-info" href="/Home/EditResellerClient/0" id="addtoCart">Add Client</a>
    <br /><br />
    <table class="table table-striped table-bordered table-hover" id="myTable" style="
    /*margin-left: -255px;*/
">
        <thead>
            <tr>
                <th>Selection</th>
                <th>
                    Customer Name
                </th>
                <th>
                    DeviceId
                </th>
                <th>
                    Expiry Date
                </th>
                <th>
                    Email
                </th>
                <th>
                    Phone
                </th>
                <th>
                    City
                </th>
                <th>
                    State
                </th>
                <th>
                    Max Users
                </th>
                <th>
                    Total Amount (@amount1)
                </th>
                <th>
                    Password
                </th>
                <th>
                    Actions
                </th>
            </tr>
        </thead>

        <tbody>

            @foreach (var person in list)
            {
                var m = !string.IsNullOrEmpty(person.MaxUser) ? (Convert.ToInt32(person.MaxUser) * person.ResellerAmount) : 0;

                <tr>
                    <td>
                        <input type="checkbox" class="chk" id="@person.CustomerID" onclick="addToCart(this,'@person.CustomerID')" name="id[]" data-deviceid="@person.DeviceID" data-maxuser="@person.MaxUser" data-amt="@m" value="@person.CustomerID">
                    </td>
                    <td>@person.CustomerName</td>
                    <td style="width: 16.66%">@person.DeviceID</td>
                    <td>@person.DateExpiry</td>
                    <td>@person.emailid</td>
                    <td>@person.Mobile</td>
                    <td>@person.City</td>
                    <td>@person.State</td>
                    <td style="width: 10.66%"> @Convert.ToInt32(person.MaxUser)</td>

                    <td> @m</td>

                    <td>@person.Password</td>
                    <td width="20%">
                        <a href="/Home/EditResellerClient/@person.CustomerID" data-id="@person.CustomerID" class="btn btn-primary">
                            Edit
                        </a>
                        <a data-id="@person.CustomerID" data-maxuser="@person.MaxUser" data-amount="@m" data-deviceid="@person.DeviceID" data-cust="@person.CustomerID" class="btn btn-success">
                            Add To Cart
                        </a>
                        <a data-id="@person.CustomerID" data-maxuser="@person.MaxUser" data-amount="@m" data-deviceid="@person.DeviceID" data-cust="@person.CustomerID" class="btn btn-warning">
                            Pay now
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="modal fade" id="deleteModal" data-custom- tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body text-center">
                <h4>Max users </h4>: <input type="number" class="form-control" min="1" max="9999999" id="translationamount" />

                <h4 style="display: block;">You will not be able to change the count of maximum users after you proceed</h4>
            </div>
            <div class="modal-footer" style="text-align:center !important">
                <button class="btn btn-default" id="deleteModalCancel" tabindex="2" data-dismiss="modal">No, cancel pls!</button>
                <button class="btn btn-success" id="delete-btn">Submit!</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addToModal" data-custom- tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body text-center">
                <h4>Max users </h4>: <input type="number" class="form-control" min="1" max="9999999" id="txtmaxUser" />

                <h4 style="display: block;">You will not be able to change the count of maximum users after you proceed.(Do refresh page to remove from cart)</h4>
            </div>
            <div class="modal-footer" style="text-align:center !important">
                <button class="btn btn-default" id="addTocartCancel" onclick="cancel()" tabindex="2" data-dismiss="modal">No, cancel pls!</button>
                <button class="btn btn-success" id="delete-btn1">Submit!</button>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.1/css/toastr.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.0.1/js/toastr.js"></script>
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css" />
<script src="//cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsSHA/2.4.2/sha.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script>
    var values = null; var totalAmount = 0; var oTable = null; var isCancelled = false; var isSubmitted1 = false; var isModel1 = false;
        var key = '@System.Configuration.ConfigurationManager.AppSettings["PaymentOption"].ToString()';

    function addToCart($this, id) {
        var ischecked = $('#' + $this.id).is(':checked');
        if (ischecked) {
            var userInfo = JSON.parse('@Html.Raw(userInfoJson)');
            var user = userInfo.find(x => x.CustomerID == id);

            $('#addToModal').data('id', JSON.stringify(user)).modal('show');
            $("#txtmaxUser").val(user.MaxUser)
            isSubmitted1 = false;

            $('#addToModal').modal('show');
        }
        else {
            isSubmitted = false;
            isModel = false;
        }
    }
    $('#deleteModal').on('hidden.bs.modal', function () {
            $("#" + JSON.parse($(this).data('id')).CustomerID).prop('checked', false);
            $("#translationamount").val("");
    });

    //$('#addToModal').on('hidden.bs.modal', function () {
    //    debugger
    //    if (!isSubmitted1 && !isModel1) {
    //        $("#" + JSON.parse($(this).data('id')).CustomerID).prop('checked', false);
    //        $("#txtmaxUser").val("");
    //    }
    //    if (isCancelled) {
    //        $("#" + JSON.parse($(this).data('id')).CustomerID).prop('checked', false);
    //        $("#txtmaxUser").val("");
    //    }
    //});

    $("#addtoCart").on("click", function () {
        if (values == null) {
            values = [];
            oTable.$('input:checked').each(function () {
                var obj = {};
                obj.id = $(this).val();
                obj.amt = $(this).data('amt');
                obj.maxuser = $(this).data('maxuser');
                values.push(obj);
            });
        }
        totalAmount = 0;

        if (values == undefined || values.length == 0 || values == []) {
            toastr.error('Please select atleast one checkbox for add to cart');
            return;
        }
        else {
            $.each(values, function (i, a) {
                totalAmount += parseInt(a.amt)
            })
            if (key == "RazorPay") {

                var loadScript = function (path) {
                    var result = $.Deferred(),
                        script = document.createElement("script");

                    script.async = "async";
                    script.type = "text/javascript";
                    script.src = path;
                    script.onload = script.onreadystatechange = function (_, isAbort) {
                        if (!script.readyState || /loaded|complete/.test(script.readyState)) {
                            if (isAbort)
                                result.reject();
                            else
                                result.resolve();
                        }
                    };

                    script.onerror = function () {
                        result.reject();
                    };

                    $("head")[0].appendChild(script);

                    return result.promise();
                }


            loadScript('https://checkout.razorpay.com/v1/checkout.js').then(function () {
                window.r = new Razorpay({
                     key: '@System.Configuration.ConfigurationManager.AppSettings["razorPayKey"].ToString()',
                    protocol: 'https',
                    hostname: 'api.razorpay.com',
                    amount: totalAmount * 100,
                    name: '@user.Name',
                    description:  '@user.Name users',
                    prefill: {
                        name: '@user.Name',
                        email:  '@user.emailid',
                        contact:  '@user.Mobile'
                    },
                    modal: {

                        "ondismiss": function () {
                            var allCHKPages = oTable.fnGetNodes();
                            $('input[type="checkbox"]', allCHKPages).prop('checked', false);

                            $("#txtmaxUser").val("");
                            $("#translationamount").val("");
                            values = [];
                            $(".razorpay-container").remove();
                        }
                    },
                    handler: function (transaction) {
                        $.post('/Return/HandleResellerPayments', { param: JSON.stringify(values) }, function (data) {
                            if (data != null) {
                                if (data.status == "Failed") {
                                    location.href = '/Home/ResellerFail';
                                }
                                else {
                                    location.href = '/Home/ResellerSuccess';
                                }
                            }
                        });
                    }
                });
                r.open();

            });


                @*var options = {
                    "key": "rzp_test_4eINMyNiQesjcj", // Enter the Key ID generated from the Dashboard
                    "amount": totalAmount *100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                    "currency": "INR",
                    "name": '@user.Name',
                    "description": '@user.Name users',
                    "handler": function (response) {
                        $.post('/Return/HandleResellerPayments',{ param: JSON.stringify(values) }, function (data) {
                            if (data != null) {
                                if (data.status == "Failed") {
                                    location.href = '/Home/ResellerFail';
                                }
                                else {
                                    location.href = '/Home/ResellerSuccess';
                                }
                            }
                        });
                    },
                    "prefill": {
                        "name": '@user.Name',
                        "email": '@user.emailid',
                        "contact": '@user.Mobile'
                    },
                    "theme": {
                        "color": "#F37254"
                    }, "modal": {

                        "ondismiss": function () {
                            debugger
                            var allCHKPages = oTable.fnGetNodes();
                            $('input[type="checkbox"]', allCHKPages).prop('checked', false);

                            $("#txtmaxUser").val("");
                            $("#translationamount").val("");
                            values = [];
                            $(".razorpay-container").remove();
                            //$('.modal').modal('hide')
                        }
                    }
                };
                var rzp1 = new Razorpay(options);
                rzp1.open();*@
                //e.preventDefault();
            }
            else {
                var merchantKey = '@System.Configuration.ConfigurationManager.AppSettings["key"]';
                var uid = getRandomInt();
                var totalPrice = totalAmount;
                var productInfo = '@user.Name users payment';
                var recipient_name = '@user.Name';
                var email = '@user.emailid';

                var merchantSalt = '@System.Configuration.ConfigurationManager.AppSettings["SALT"]';
                var hashString = merchantKey + '|' + uid + '|' + totalPrice + '|' + productInfo + '|' + recipient_name + '|' + email + '|||||||||||' + merchantSalt;
                var shaObj = new jsSHA("SHA-512", "TEXT");
                shaObj.update(hashString);
                var hash = shaObj.getHash("HEX");

                var key1 = $('<input></input>').attr('type', 'hidden').attr('name', "key").val(merchantKey);
                var key2 = $('<input></input>').attr('type', 'hidden').attr('name', "txnid").val(uid);

                var key3 = $('<input></input>').attr('type', 'hidden').attr('name', "amount").val(totalPrice);

                var key4 = $('<input></input>').attr('type', 'hidden').attr('name', "productinfo").val(productInfo);

                var key5 = $('<input></input>').attr('type', 'hidden').attr('name', "firstname").val(recipient_name);

                var key6 = $('<input></input>').attr('type', 'hidden').attr('name', "email").val(email);

                var key7 = $('<input></input>').attr('type', 'hidden').attr('name', "phone").val('@user.Mobile');

                var key8 = $('<input></input>').attr('type', 'hidden').attr('name', "surl").val(window.location.origin + '/Return/ResellerPayU');

                var key9 = $('<input></input>').attr('type', 'hidden').attr('name', "furl").val(window.location.origin + '/Home/ResellerFail');

                var key10 = $('<input></input>').attr('type', 'hidden').attr('name', "hash").val(hash);

                var key11 = $('<input></input>').attr('type', 'hidden').attr('name', "service_provider").val();


                var form = $('<form/></form>');

                form.attr("id", "payuform");

                form.attr("action", '@System.Configuration.ConfigurationManager.AppSettings["PAYU_BASE_URL"]');

                form.attr("method", "POST");

                form.attr("style", "display:none;");

                form.append(key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11);

                $("body").append(form);
                $.get('/Return/StorePayYouMoneyJson?param=' + JSON.stringify(values), function (data) {
                    if (data) {
                        form.submit();
                    }
                });

            }
        }
    })

    $(function () {
         oTable = $('#myTable').dataTable({
            stateSave: true
        });
        toastr.options.timeOut = 1500; // 1.5s

        var allPages = oTable.fnGetNodes();

        $('body').on('click', '#chk-all', function () {
            if ($(this).hasClass('allChecked')) {
                $('input[type="checkbox"]', allPages).prop('checked', false);
            } else {
                $('input[type="checkbox"]', allPages).prop('checked', true);
            }
            $(this).toggleClass('allChecked');
        })
        var allCHKPages = oTable.fnGetNodes();
        $('input[type="checkbox"]', allCHKPages).prop('checked', false);

    })

    $("#btnLogout").click(function () {
        $.get('/Home/Logout', function (data) {
            if (data == "Cleared") {
                location.href = "/Home/Index";
            }
        });
    });

    $("#myTable").on("click", "a.btn-success", function () {
         //use Json.parse to convert string to Json
        var userInfo = JSON.parse('@Html.Raw(userInfoJson)');
        var id = $(this).data('id');
        var user = userInfo.find(x => x.CustomerID == id);

        $('#addToModal').data('id', JSON.stringify(user)).modal('show');
        $("#txtmaxUser").val(user.MaxUser);
        isModel1 = true;
        $('#addToModal').modal('show');
    });

    function cancel() {
        isCancelled = true;
    }

    $('#delete-btn1').click(function () {
        isSubmitted1 = true;
        isModel = true;
        if ($("#txtmaxUser").val() == "") {
            toastr.error('Max user value is required!!');
            return;
        }
        var user = JSON.parse($('#addToModal').data('id'));
        if (user != null) {
            $("#" + user.CustomerID).prop('checked', true);
            var obj = {};
            obj.id = user.CustomerID;

            obj.amt = user.ResellerAmount * parseInt($("#txtmaxUser").val());
            obj.maxuser = $("#txtmaxUser").val();
            if (values == null) {
                values = [];
            }
            values.push(obj);
            toastr.success('Added to cart');
            $("#txtmaxUser").val("");
            isSubmitted1 = false;
            $('#addToModal').modal('hide');

        }
    });

    $("#myTable").on("click", "a.btn-warning", function () {
         //use Json.parse to convert string to Json
        var userInfo = JSON.parse('@Html.Raw(userInfoJson)');
        var id = $(this).data('id');
        var user = userInfo.find(x => x.CustomerID == id);
        isModel = true;
        $('#deleteModal').data('id', JSON.stringify(user)).modal('show');
        $("#translationamount").val(user.MaxUser);
        $('#deleteModal').modal('show');
    });

    $('#delete-btn').click(function () {

        var id = $('#deleteModal').data('id');
        if ($("#translationamount").val()=="") {
            toastr.error('Max user value is required!!');
            return;
        }
        var user = []; var maxUser = $("#translationamount").val();
        user.push(JSON.parse(id));

        var loadScript = function (path) {
            var result = $.Deferred(),
                script = document.createElement("script");

            script.async = "async";
            script.type = "text/javascript";
            script.src = path;
            script.onload = script.onreadystatechange = function (_, isAbort) {
                if (!script.readyState || /loaded|complete/.test(script.readyState)) {
                    if (isAbort)
                        result.reject();
                    else
                        result.resolve();
                }
            };

            script.onerror = function () {
                result.reject();
            };

            $("head")[0].appendChild(script);

            return result.promise();
        }

        if (key === "PayUMoney") {
                var merchantKey = '@System.Configuration.ConfigurationManager.AppSettings["key"]';
                var uid = getRandomInt();
                var totalPrice = user[0].ResellerAmount * parseInt($("#translationamount").val());
                var productInfo = user[0].DeviceID;
                var recipient_name = user[0].CustomerName + ',' + user[0].CustomerID;
                var email = user[0].emailid;
                var merchantSalt = '@System.Configuration.ConfigurationManager.AppSettings["SALT"]';
                var hashString = merchantKey + '|' + uid + '|' + totalPrice + '|' + productInfo + '|' + recipient_name + '|' + email + '|||||||||||' + merchantSalt;
                var shaObj = new jsSHA("SHA-512", "TEXT");
                shaObj.update(hashString);
                var hash = shaObj.getHash("HEX");

                var key1 = $('<input></input>').attr('type', 'hidden').attr('name', "key").val(merchantKey);
                var key2 = $('<input></input>').attr('type', 'hidden').attr('name', "txnid").val(uid);

                var key3 = $('<input></input>').attr('type', 'hidden').attr('name', "amount").val(totalPrice);

                var key4 = $('<input></input>').attr('type', 'hidden').attr('name', "productinfo").val(productInfo);

                var key5 = $('<input></input>').attr('type', 'hidden').attr('name', "firstname").val(recipient_name);

                var key6 = $('<input></input>').attr('type', 'hidden').attr('name', "email").val(email);

                var key7 = $('<input></input>').attr('type', 'hidden').attr('name', "phone").val(user.Mobile);

            var key8 = $('<input></input>').attr('type', 'hidden').attr('name', "surl").val(window.location.origin + '/Return/ResellerPayU');

                var key9 = $('<input></input>').attr('type', 'hidden').attr('name', "furl").val(window.location.origin + '/Home/ResellerFail');

                var key10 = $('<input></input>').attr('type', 'hidden').attr('name', "hash").val(hash);

                var key11 = $('<input></input>').attr('type', 'hidden').attr('name', "service_provider").val();

                var form = $('<form/></form>');

                form.attr("id", "payuform");

                form.attr("action", '@System.Configuration.ConfigurationManager.AppSettings["PAYU_BASE_URL"]');

                form.attr("method", "POST");

                form.attr("style", "display:none;");

                form.append(key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11);
                 $("body").append(form);
                 var userAmount = [];
                 var obj = {};
                 obj.id = user[0].CustomerID;
                 obj.amt = user[0].ResellerAmount * parseInt($("#translationamount").val());
                 obj.maxuser = $("#translationamount").val();
                     userAmount.push(obj);
                 $.get('/Return/StorePayYouMoneyJson?param=' + JSON.stringify(userAmount), function (data) {
                     if (data) {
                         form.submit();
                     }
                 });
         }
         else {
             var userAmount = [];
             var obj = {};
             obj.id = user[0].CustomerID;
             obj.amt = user[0].ResellerAmount * parseInt($("#translationamount").val());
             obj.maxuser = $("#translationamount").val();
             userAmount.push(obj);
             loadScript('https://checkout.razorpay.com/v1/checkout.js').then(function () {
                window.r = new Razorpay({
                    key: 'rzp_test_4eINMyNiQesjcj',
                    protocol: 'https',
                    hostname: 'api.razorpay.com',
                    amount: (user[0].ResellerAmount * parseInt($("#translationamount").val())) * 100,
                    name: user[0].CustomerName,
                    description: user[0].DeviceID,
                    prefill: {
                        name: user[0].CustomerName,
                        email: user[0].emailid,
                        contact: user[0].Mobile
                    },
                    modal: {
                        "ondismiss": function () {
                            debugger
                            $("#txtmaxUser").val("");
                            $("#translationamount").val("");
                            values = [];
                            $('.modal').modal('hide')
                        }
                    },
                    handler: function (transaction) {
                        $.post('/Return/HandleResellerPayments', { param: JSON.stringify(userAmount) }, function (data) {
                            if (data != null) {
                                if (data.status == "Failed") {
                                    location.href = '/Home/ResellerFail';
                                }
                                else {
                                    location.href = '/Home/ResellerSuccess';
                                }
                            }
                        });
                    }
                });
                        r.open()
            });
                }
    });

    function getRandomInt() {
        return Math.floor(100000 + Math.random() * 900000);
    }


</script>
<style>
    .mq-navbar {
        border-radius: 0px;
        background-color: #2d2d2d;
        color: #fff;
    }

    td {
        word-break: break-word;
    }

    tr {
        page-break-inside: avoid
    }
    /*th {
        max-width: 150px;
        max-height: 150px;
        overflow: hidden;
        word-wrap: break-word;
    }
    td {
        max-width: 150px;
        max-height: 150px;
        overflow: hidden;
        word-wrap: break-word;
    }*/
    .ui-datatable .ui-datatable-data > tr > td {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap
    }

    .mq-dropdown {
        margin-top: 10px !important;
        padding: 0px !important;
        background-color: #76b9ea;
    }

    table {
        margin: 0 auto;
        width: 100%;
        clear: both;
        border-collapse: collapse;
        table-layout: fixed;
    }

    .navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus {
        color: #fff !important;
        background-color: #1c1c1c;
    }

    .mq-comment {
        list-style: none;
        margin-bottom: 10px;
        padding: 0;
        border-bottom: 1px solid #ccc;
    }

    .comment li {
        margin-bottom: 10px;
        padding-bottom: 5px;
        border-bottom: 1px dotted #B3A9A9;
    }

    .mq-comment-img {
        margin-right: 10px;
    }

    .mq-panel-wrapper {
        width: 45%;
        height: 300px;
        background-color: #2d2d2d;
        margin: 20px;
        float: left;
        border: 1px solid #330033;
        box-shadow: 0px 0px 20px 0px #2d2d2d;
        border-radius: 0px 0px 5px 5px;
    }

    .mq-panel-header {
        width: 100%;
        height: 60px;
        background-color: #1c1c1c;
        padding: 10px;
        display: table;
        position: relative;
    }

        .mq-panel-header h3 {
            color: #fff;
            font-size: 12pt;
            font-weight: 300;
            letter-spacing: 1px;
            display: table-cell;
            vertical-align: middle;
        }

    .mq-panel-body {
        width: 100%;
        max-height: 238px;
        overflow-y: scroll;
        padding: 10px;
        background-color: #eee;
        border-radius: 0px 0px 5px 5px;
    }

    .mq-friends {
        width: 31.3%;
        height: 100px;
        padding: 0;
        position: relative;
        display: table;
        float: left;
        margin: 0px 10px 10px 0px;
    }

        .mq-friends:hover {
            transition: .6s;
            transform: scale(.9);
        }

    .mq-friend-img {
        padding-top: 10px;
    }

    .mq-friends-footer {
        width: 100%;
        background-color: #3399ff;
        position: absolute;
        bottom: 0;
        text-align: center;
        color: #fff;
    }
</style>